



Standard library - Wikipedia



























Jump to content







Main menu





Main menu
move to sidebar
hide



		Navigation
	


Main pageContentsCurrent eventsRandom articleAbout WikipediaContact usDonate





		Contribute
	


HelpLearn to editCommunity portalRecent changesUpload file





Languages

Language links are at the top of the page.



















Search











Search





























Create account

Log in








Personal tools





 Create account Log in





		Pages for logged out editors learn more



ContributionsTalk




























Contents
move to sidebar
hide




(Top)





1Overview







2Contents







3Philosophies







4Examples of standard libraries







5References

















Toggle the table of contents







Standard library



19 languages




العربيةCatalàČeštinaDeutschΕλληνικάFrançais한국어HrvatskiÍslenska日本語PolskiРусскийСрпски / srpskiSuomiУкраїнськаTiếng Việt文言粵語中文

Edit links











ArticleTalk





English

















ReadEditView history







Tools





Tools
move to sidebar
hide



		Actions
	


ReadEditView history





		General
	


What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationCite this pageGet shortened URLDownload QR codeWikidata item





		Print/export
	


Download as PDFPrintable version

























From Wikipedia, the free encyclopedia


Library used in all implementations of a programming language
This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed.Find sources: "Standard library" – news · newspapers · books · scholar · JSTOR (May 2019) (Learn how and when to remove this template message)
In computer programming, a standard library is the library made available across implementations of a programming language. These libraries are conventionally described in programming language specifications; however, contents of a language's associated library may also be determined (in part or whole) by more informal practices of a language's community.


Overview[edit]
A language's standard library is often treated as part of the language by its users, although the designers may have treated it as a separate entity. Many language specifications define a core set that must be made available in all implementations, in addition to other portions which may be optionally implemented. The line between a language and its libraries therefore differs from language to language. Indeed, some languages are designed so that the meanings of certain syntactic constructs cannot even be described without referring to the core library. For example, in Java, a string literal is defined as an instance of the java.lang.String class; similarly, in Smalltalk, an anonymous function expression (a "block") constructs an instance of the library's BlockContext class. Conversely, Scheme contains multiple coherent subsets that suffice to construct the rest of the language as library macros, and so the language designers do not even bother to say which portions of the language must be implemented as language constructs, and which must be implemented as parts of a library.

Contents[edit]
Standard libraries typically include definitions for commonly used algorithms, data structures, and mechanisms for input and output. Depending on the constructs made available by the host language, a standard library may include:

Subroutines
Macro definitions
Global variables
Class definitions
Templates
Most standard libraries include definitions for at least the following commonly used facilities:

Algorithms (such as sorting algorithms)
Data structures (such as lists, trees, and hash tables)
Interaction with the host platform, including input/output and operating system calls
Philosophies[edit]
Philosophies of standard library design vary widely. For example, Bjarne Stroustrup, designer of C++, writes:

What ought to be in the standard C++ library? One ideal is for a programmer to be able to find every interesting, significant, and reasonably general class, function, template, etc., in a library. However, the question here is not, "What ought to be in some library?" but "What ought to be in the standard library?" The answer "Everything!" is a reasonable first approximation to an answer to the former question but not the latter. A standard library is something every implementer must supply so that every programmer can rely on it.[1]
This suggests a relatively small standard library, containing only the constructs that "every programmer" might reasonably require when building a large collection of software. This is the philosophy that is used in the C and C++ standard libraries.
By contrast, Guido van Rossum, designer of Python, has embraced a much more inclusive vision of the standard library. Python offers us easy-to-code, object-oriented, high-level language means. In the Python tutorial, he writes:

Python has a "batteries included" philosophy. This is best seen through the sophisticated and robust capabilities of its larger packages.[2]
Van Rossum goes on to list libraries for processing XML, XML-RPC, email messages, and localization, facilities that the C++ standard library omits. This other philosophy is often found in scripting languages (as in Python or Ruby) or languages that use a virtual machine, such as Java or the .NET Framework languages. In C++, such facilities are not part of the standard library, but instead other libraries, such as Boost.

Examples of standard libraries[edit]
This article is in list format but may read better as prose. You can help by converting this article, if appropriate. Editing help is available. (November 2016)
C standard library, for the C programming language
C++ Standard Library, for the C++ programming language
Framework Class Library (FCL), for the .NET Framework
Java Class Library (JCL), for the Java programming language, and Java Platform
Factor standard library, for the Factor programming language
Ruby standard library, for the Ruby programming language
Python standard library, for the Python programming language
Standard Libraries (CLI)
References[edit]

^ Bjarne Stroustrup. The C++ Programming Language. 3rd Ed. Addison-Wesley, 1997

^ Guido van Rossum. [1].






Retrieved from "https://en.wikipedia.org/w/index.php?title=Standard_library&oldid=1189159536"
Categories: Programming librariesProgramming language standardsHidden categories: Articles with short descriptionShort description is different from WikidataArticles needing additional references from May 2019All articles needing additional referencesArticles needing cleanup from November 2016All pages needing cleanupArticles with sections that need to be turned into prose from November 2016






 This page was last edited on 10 December 2023, at 02:47 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike License 4.0;
additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Developers
Statistics
Cookie statement
Mobile view













Toggle limited content width







