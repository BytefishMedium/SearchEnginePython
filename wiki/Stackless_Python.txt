



Stackless Python - Wikipedia



























Jump to content







Main menu





Main menu
move to sidebar
hide



		Navigation
	


Main pageContentsCurrent eventsRandom articleAbout WikipediaContact usDonate





		Contribute
	


HelpLearn to editCommunity portalRecent changesUpload file





Languages

Language links are at the top of the page.



















Search











Search





























Create account

Log in








Personal tools





 Create account Log in





		Pages for logged out editors learn more



ContributionsTalk




























Contents
move to sidebar
hide




(Top)





1Design







2Use







3See also







4References







5External links

















Toggle the table of contents







Stackless Python



10 languages




العربيةDeutschFrançais한국어മലയാളം日本語РусскийСрпски / srpskiУкраїнська中文

Edit links











ArticleTalk





English

















ReadEditView history







Tools





Tools
move to sidebar
hide



		Actions
	


ReadEditView history





		General
	


What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationCite this pageGet shortened URLDownload QR codeWikidata item





		Print/export
	


Download as PDFPrintable version

























From Wikipedia, the free encyclopedia


Alternative Python implementation
This article has multiple issues. Please help improve it or discuss these issues on the talk page. (Learn how and when to remove these template messages)

This article relies excessively on references to primary sources. Please improve this article by adding secondary or tertiary sources. Find sources: "Stackless Python" – news · newspapers · books · scholar · JSTOR (December 2017) (Learn how and when to remove this template message)
This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed.Find sources: "Stackless Python" – news · newspapers · books · scholar · JSTOR (March 2013) (Learn how and when to remove this template message)

 (Learn how and when to remove this template message)
Stackless PythonOriginal author(s)Christian TismerDeveloper(s)Anselm KruisInitial release1998; 26 years ago (1998)Stable release3.8.1-slp[1] 
   / January 22, 2020; 4 years ago (2020-01-22)Preview release12 August 2021; 2 years ago (12 August 2021)

Repositorygithub.com/stackless-dev/stackless 
Written inC, PythonOperating systemLinux, macOS, WindowsTypeInterpreterLicensePython Software Foundation LicenseWebsitewww.stackless.com
Stackless Python, or Stackless, is a Python programming language interpreter, so named because it avoids depending on the C call stack for its own stack. In practice, Stackless Python uses the C stack, but the stack is cleared between function calls.[2] The most prominent feature of Stackless is microthreads, which avoid much of the overhead associated with usual operating system threads. In addition to Python features, Stackless also adds support for coroutines, communication channels, and task serialization.


Design[edit]
With Stackless Python, a running program is split into microthreads that are managed by the language interpreter itself, not the operating system kernel—context switching and task scheduling is done purely in the interpreter (these are thus also regarded as a form of green thread). Microthreads manage the execution of different subtasks in a program on the same CPU core. Thus, they are an alternative to event-based asynchronous programming and also avoid the overhead of using separate threads for single-core programs (because no mode switching between user mode and kernel mode needs to be done, so CPU usage can be reduced).
Although microthreads make it easier to deal with running subtasks on a single core, Stackless Python does not remove CPython's Global Interpreter Lock, nor does it use multiple threads and/or processes. So it allows only cooperative multitasking on a shared CPU and not parallelism (preemption was originally not available but is now in some form[3]). To use multiple CPU cores, one would still need to build an interprocess communication system on top of Stackless Python processes.
Due to the considerable number of changes in the source, Stackless Python cannot be installed on a preexisting Python installation as an extension or library. It is instead a complete Python distribution in itself. The majority of Stackless's features have also been implemented in PyPy, a self-hosting Python interpreter and JIT compiler.[4]

Use[edit]
Although the whole Stackless is a separate distribution, its switching functionality has been successfully packaged as a CPython extension called greenlet.[5] It is used by a number of libraries (e.g. gevent[6]) to provide a green threading solution for CPython. Python since has received a native solution for green threads: await/async.
Stackless is used extensively in the implementation of the Eve Online massively multiplayer online game as well as in IronPort's mail platform.

See also[edit]

Free and open-source software portal
Erlang (programming language)
Limbo (programming language)
Go (programming language)
SCOOP (software)
References[edit]


^ "Release v3.8.1-slp". 12 August 2021. Retrieved 8 March 2022.

^ Archived at Ghostarchive and the Wayback Machine: The story of stackless Python. YouTube.

^ "About Stackless". Archived from the original on 23 June 2020. Retrieved 26 August 2016. a round robin scheduler is built in. It can be used to schedule tasklets either cooperatively or preemptively.

^ "Application-level Stackless features — PyPy documentation". pypy.readthedocs.org.

^ "greenlet: Lightweight concurrent programming — greenlet 0.4.0 documentation". greenlet.readthedocs.org.

^ "What is gevent? — gevent 1.3.0.dev0 documentation". www.gevent.org.


External links[edit]
Official website 
Stackless Python Documentation for: 3.7-slp, 3.6-slp, 3.5-slp, 3.4-slp, 2.7-slp
stackless on GitHub
Multithreaded Game Scripting with Stackless Python by Harry Kalogirou
Continuations and Stackless Python by Christian Tismer
vtePythonImplementations
CircuitPython
CLPython
CPython
Cython
MicroPython
Numba
IronPython
Jython
Psyco
PyPy
Python for S60
Shed Skin
Stackless Python
Unladen Swallow
more...
IDE
Boa
Eric Python IDE
IDLE
PyCharm
PyDev
Ninja-IDE
more...
Topics
WSGI
ASGI

software (list)
Python Software Foundation
PyCon





Retrieved from "https://en.wikipedia.org/w/index.php?title=Stackless_Python&oldid=1207052469"
Categories: Concurrent computingPython (programming language) implementationsSoftware using the PSF licenseHidden categories: Articles with short descriptionShort description matches WikidataArticles lacking reliable references from December 2017All articles lacking reliable referencesArticles needing additional references from March 2013All articles needing additional referencesArticles with multiple maintenance issues






 This page was last edited on 13 February 2024, at 21:14 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike License 4.0;
additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Developers
Statistics
Cookie statement
Mobile view













Toggle limited content width







